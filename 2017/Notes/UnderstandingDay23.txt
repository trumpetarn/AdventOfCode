Understanding the imput Day 23 (part 2)

set b 93
set c b
jnz a 2
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000
set f 1
set d 2
set e 2
set g d
mul g e
sub g b
jnz g 2
set f 0
sub e -1
set g e
sub g b
jnz g -8
sub d -1
set g d
sub g b
jnz g -13
jnz f 2
sub h -1
set g b
sub g c
jnz g 2
jnz 1 3
sub b -17
jnz 1 -23

=== Add Ifs and loops ===
set b 93
set c b
if a != 0 #jnz a 2, jnz 1 5
	mul b 100
	sub b -100000
	set c b
	sub c -17000
set f 1
set d 2
set e 2
set g d
mul g e
sub g b
if g == 0 #jnz g 2
	set f 0
sub e -1
set g e
sub g b
while g!= 0  #jnz g -8
	set g d
	mul g e
	sub g b
	if g == 0 #jnz g 2
		set f 0
	sub e -1
	set g e
	sub g b
sub d -1
set g d
sub g b
while g != 0 jnz g -13
	set e 2
	set g d
	mul g e
	sub g b
	if g==0 #jnz g 2
		set f 0
	sub e -1
	set g e
	sub g b
	while g != 0 #jnz g -8
		set g d
		mul g e
		sub g b
		if g == 0 #jnz g 2
			set f 0
		sub e -1
		set g e
		sub g b
	sub d -1
	set g d
	sub g b
if f==0 #jnz f 2
	sub h -1
set g b
sub g c
if g==0 #jnz g 2
	jnz 1 3 (BREAK)
sub b -17
while true
set f 1
set d 2
set e 2
set g d
mul g e
sub g b
if g == 0 #jnz g 2
	set f 0
	sub e -1
	set g e
	sub g b
	while g!= 0  #jnz g -8
		set g d
		mul g e
		sub g b
		if g == 0 #jnz g 2
			set f 0
		sub e -1
		set g e
		sub g b
	sub d -1
	set g d
	sub g b
	while g != 0 jnz g -13
		set e 2
		set g d
		mul g e
		sub g b
		if g==0 #jnz g 2
			set f 0
		sub e -1
		set g e
		sub g b
		while g != 0 #jnz g -8
			set g d
			mul g e
			sub g b
			if g == 0 #jnz g 2
				set f 0
			sub e -1
			set g e
			sub g b
		sub d -1
		set g d
		sub g b
	if f==0 #jnz f 2
		sub h -1
	set g b
	sub g c
	if g==0 #jnz g 2
		jnz 1 3 (BREAK)
	sub b -17


=== Imrprove Loops ===
set b 93
set c b
if a != 0 #jnz a 2, jnz 1 5 will be true
	mul b 100
	sub b -100000
	set c b
	sub c -17000
while true
	set f 1
	set d 2
	while g != 0 jnz g -13
		set e 2
		set g d
		mul g e
		sub g b
		if g==0 #jnz g 2
			set f 0
		sub e -1
		set g e
		sub g b
		while g != 0 #jnz g -8
			set g d
			mul g e
			sub g b
			if g == 0 #jnz g 2
				set f 0
			sub e -1
			set g e
			sub g b
		sub d -1
		set g d
		sub g b
	if f==0 #jnz f 2
		sub h -1
	set g b
	sub g c
	if g==0 #jnz g 2
		BREAK
	sub b -17

=== Higher level === (assume a is 1 to start with (e.g. part 2))
b = 93
c = b
b = b * 100
b = b + 100000  
c = b
c = c + 17000 
# b = 109300
# c = 126300
while TRUE
	f = 1
	d = 2
	while g != 0
		e = 2
		g = d
		g = g * e
		g = g - b
		if g==0
			f = 0
		e = e + 1
		g = e
		g = g - b
		while g != 0
			g = d
			g = g * e
			g = g - b
			if g==0
				f = 0
			e = e + 1
			g = e
			g = g - b
		d = d+1
		g = d
		g = g - b
	if f==0
		h = h + 1
	g = b
	g = g - c
	if g==0
		BREAK
	b = b+17

=== Improve more ===
b = 93
c = b
b = b * 100
b = b + 100000  
c = b
c = c + 17000 
# b = 109300
# c = 126300
for b in range(109300,126300,17)
	f = TRUE
	for d in range(2,b)
		for e in range(2,b)
			if (d * e)==b
				f = FALSE
	if not f ## f gets false if d*e == b
		h = h + 1


#	g = b
#	g = g - c
#	if g==0 => b == c
#		BREAK
#	b = b+17   Last 5 => for loop with 17 step increments


=== Python Like ===
for b in range(109300,126300+1,17):
	f = True
	for d in range(2,b+1):
		for e in range(2,b+1):
			if (d*e)==b:
				f = False
				break
		if not f: 
			break
	if not f:
		h += 1
print h

=== Optimized? ===
"""We are calculating all non primes between 109300 and 126300"""

for b in range(109300,126300+1,17):
	if not prime(b):
		h += 1